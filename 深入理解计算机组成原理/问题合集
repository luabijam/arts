1.计算机是由哪些硬件组成的
2.这些硬件，又是怎么对应到经典的冯·诺依曼体系结构 中的，也就是运算器、控制器、存储器、输入设备和输出设备这五大基本组件
3.你还需要了解计 算机的两个核心指标，性能和功耗。性能和功耗也是我们在应用和设计五大基本组件中需要重点考虑的因 素。
4.在计算机指令部分，你需要搞明白，我们每天撰写的一行行C、Java、PHP程序，是怎么在计算机里面跑起 来的
5.这里面，你既需要了解我们的程序是怎么通过编译器和汇编器，变成一条条机器指令这样的编译过程 (如果把编译过程展开的话，可以变成一门完整的编译原理课程)，还需要知道我们的操作系统是怎么链 接、装载、执行这些程序的(这部分知识如果再深入学习，又可以变成一门操作系统课程)。而这一条条指 令执行的控制过程，就是由计算机五大组件之一的控制器来控制的。
6.在计算机的计算部分，你要从二进制和编码开始，理解我们的数据在计算机里的表示，以及我们是怎么从数 字电路层面，实现加法、乘法这些基本的运算功能的。实现这些运算功能的ALU(Arithmetic Logic Unit/ALU)，也就是算术逻辑单元，其实就是我们计算机五大组件之一的运算器。
7.掌握浮点数能让你对数据的编码、存储和计算能够有一个从表到里的 深入理解。
8.CPU时钟应该是我们学习CPU的前导知识。 搞明白我们为什么需要CPU时钟(CPU Clock)，以及寄存器和内存是用什么样的硬件组成的之后，我们可 以再来看看，整个计算机的数据通路是如何构造出来的。
9.数据通路，其实就是连接了整个运算器和控制器，并最终组成了CPU。而出于对于性能和功耗的考虑，你要 进一步理解和掌握面向流水线设计的CPU、数据和控制冒险，以及分支预测的相关技术。
10.既然CPU作为控制器要和输入输出设备通信，那么我们就要知道异常和中断发生的机制。在CPU设计部分的 最后，我会讲一讲指令的并行执行，看看如何直接在CPU层面，通过SIMD来支持并行计算。
11.通过存储器的层次结构作为基础的框架 引导，你需要掌握从上到下的CPU高速缓存、内存、SSD硬盘和机械硬盘的工作原理，它们之间的性能差 异，以及实际应用中利用这些设备会遇到的挑战。存储器其实很多时候又扮演了输入输出设备的角色，所以 你需要进一步了解，CPU和这些存储器之间是如何进行通信的，以及我们最重视的性能问题是怎么一回事; 理解什么是IO_WAIT，如何通过DMA来提升程序性能。
12.对于存储器，我们不仅需要它们能够正常工作，还要确保里面的数据不能丢失。于是你要掌握我们是如何通 过RAID、Erasure Code、ECC以及分布式HDFS，这些不同的技术，来确保数据的完整性和访问性能。
《计算机是怎样跑起来的》
《程序是怎样跑 起来的》

2324020


